@mixin clearfix()
{
    &:before, &:after
    {
        content: " ";
        display: table;
    }
    &:after
    {

        clear: both;
    }
}


// Button variants
// -------------------------
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons
@mixin button-variant($color, $background, $border)
{
    color: $color !important;
    background-color: $background;
    border-color: $border;

    &:hover, &:focus, &:active, &.active, .open .dropdown-toggle#{&}
    {
        color: $color !important;
        background-color: darken($background, 5%);
        border-color: darken($border, 8%);
    }
    &:active, &.active, .open .dropdown-toggle#{&}
    {
        background-image: none;
    }
    &.disabled,
    &[disabled],
    fieldset[disabled] &
    {
        &, &:hover, &:focus, &:active, &.active
        {
          background-color: $background;
          border-color: $border
        }

    }
}



@mixin color-schema($bg-color: #555, $percent: 15%, $sat-percent:"")
{
  background-color: saturate(darken($bg-color, $percent), $sat-percent) !important;
}


@mixin color-variant($bg-color: #555, $lt-percent: 10%, $lter-percent: 15%, $dk-percent: 10%, $dker-percent: 15%)
{
    background-color: $bg-color;

    &.lt, .lt
    {
        @include color-schema($bg-color, 0%, 0%);
    }
    &.lter, .lter
    {
        @include color-schema($bg-color, $lter-percent, 5%);
    }
    &.dk, .dk
    {

        @include color-schema($bg-color, $dk-percent, 2.5%);
    }
    &.dker, .dker
    {
        @include color-schema($bg-color, $dker-percent, 5%);
    }
    &.bg, .bg
    {
        background-color: $bg-color;
    }
}



@mixin font-variant($bg-color, $font-color, $link-color: #fff, $hover-color: #fff)
{
    color: $font-color;
    a
    {
        color: $link-color;
        &:hover
        {
            color: $hover-color;
        }
        &.list-group-item
        {
            &:hover,
            &:focus
            {
                background-color: inherit;
            }
        }
    }
    .nav
    {
        > li
        {

            &:hover, &:focus, &:active, &.active
            {
                > a
                {
                    color: $hover-color;
                    @include color-schema($bg-color, 7.5%, 2.5%);
                }
            }
            > a
            {
                color: $link-color;
                &:hover,
                &:focus
                {
                    @include color-schema($bg-color, 5%, 2.5%);
                }
            }
        }
      .open > a
      {
          @include color-schema($bg-color, 7.5%, 2.5%);
      }
    }
    .caret
    {
        border-top-color: $font-color;
        border-bottom-color: $font-color;
    }
    &.navbar .nav
    {
        > li.active > a
        {
            color: $hover-color;
            @include color-schema($bg-color, 5%, 2.5%);
        }
    }
    .open > a
    {
        &, &:hover, &:focus
        {
          color: $hover-color;
        }
    }
    .text-muted
    {
        color: darken($font-color, 10%) !important;
    }
    .text-lt
    {
        color: lighten($font-color, 25%) !important;
    }
    .icon-muted
    {
        color: darken($font-color, 10%) !important;
    }
    &.auto, .auto
    {
        .list-group-item
        {
            border-color: lighten($bg-color, 3%) !important;
            background-color: transparent;
            &:hover, &:focus, &:active, &.active
            {
                @include color-schema($bg-color, 5%, 2.5%);
            }
        }

    }
}




@mixin text-wariant($bg-color, $name)
{
    .text-#{$name}
    {
        color: $bg-color;
    }

    .text-#{$name}-lt
    {
        color: lighten($bg-color, 5%);
    }

    .text-#{$name}-lter
    {
        color: lighten($bg-color, 10%);
    }

    .text-#{$name}-dk
    {
        color: darken($bg-color, 5%);
    }

    .text-#{$name}-dker
    {
        color: darken($bg-color, 10%);
    }
}


// Transitions
@mixin transition($transition)
{
    -webkit-transition: $transition;
    transition: $transition;
}

@mixin transition-delay($transition-delay)
{
    -webkit-transition-delay: $transition-delay;
    transition-delay: $transition-delay;
}
@mixin transition-duration($transition-duration)
{
    -webkit-transition-duration: $transition-duration;
    transition-duration: $transition-duration;
}
@mixin transition-transform($transition)
{
    -webkit-transition: -webkit-transform $transition;
    -moz-transition: -moz-transform $transition;
    -o-transition: -o-transform $transition;
    transition: transform $transition;
}


@mixin box-shadow($shadow)
{
    -webkit-box-shadow: $shadow; // iOS <4.3 & Android <4.1
    box-shadow: $shadow;
}



// Vertical gradient, from top to bottom
//
// Creates two color stops, start and end, by specifying a color and position for each color stop.
// Color stops are not available in IE9 and below.
@mixin vertical($start-color: #555, $end-color: #333, $start-percent: 0%, $end-percent: 100%)
{
    background-image: -webkit-gradient(linear, left $start-percent, left $end-percent, from($start-color), to($end-color)); // Safari 4+, Chrome 2+
    background-image: -webkit-linear-gradient(top, $start-color, $start-percent, $end-color, $end-percent); // Safari 5.1+, Chrome 10+
    background-image:  -moz-linear-gradient(top, $start-color $start-percent, $end-color $end-percent); // FF 3.6+
    background-image: linear-gradient(to bottom, $start-color $start-percent, $end-color $end-percent); // Standard, IE10
    background-repeat: repeat-x;
    //filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb($start-color),argb($end-color))); // IE9 and down
}

// Transformations
@mixin rotate($degrees)
{
    -webkit-transform: rotate($degrees);
    -ms-transform: rotate($degrees); // IE9+
    transform: rotate($degrees);
}


@mixin translate3d($x, $y, $z)
{
    -webkit-transform: translate3d($x, $y, $z);
    transform: translate3d($x, $y, $z);
}


// Backface visibility
// Prevent browsers from flickering when using CSS 3D transforms.
// Default value is `visible`, but can be changed to `hidden`
// See git pull https://github.com/dannykeane/bootstrap.git backface-visibility for examples
@mixin backface-visibility($visibility)
{
    -webkit-backface-visibility: $visibility;
    -moz-backface-visibility: $visibility;
    backface-visibility: $visibility;
}

// Box sizing
@mixin box-sizing($boxmodel)
{
    -webkit-box-sizing: $boxmodel;
    -moz-box-sizing: $boxmodel;
    box-sizing: $boxmodel;
}


// Opacity
@mixin opacity($opacity)
{

    opacity: $opacity;
    // IE8 filter
    $opacity-ie: ($opacity * 100);
    filter: "alpha(opacity=#{$opacity-ie})";
}
